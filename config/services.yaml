# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: en|fr|de|es|cs|nl|ru|uk|ro|pt_BR|pl|it|ja|id|ca|sl|hr|zh_CN
    locale: 'fr'
    app.notifications.email_sender: anonymous@example.com
    app.mySweetParam: 'nerding out on Symfony is fun'
    redis.host: '%env(REDIS_HOST)%'
    redis.port: '%env(REDIS_PORT)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
#            $locales: '%app_locales%'
#            $defaultLocale: '%locale%'
#            $emailSender: '%app.notifications.email_sender%'
#            $markdownLogger: '@monolog.logger.markdown'
#            # $isDebug: '%kernel.debug%'
##            $locale: 'fr'
##            $locales: '%app_locales%'
#            $defaultLocale: '%locale%'
##            $emailSender: '%app.notifications.email_sender%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

#    App\Service\MarkdownHelper:
#        arguments:
#            $logger: '@monolog.logger.markdown'

    Nexy\Slack\Client: '@nexy_slack.client'

    App\Mailer\Emailer:
        arguments:
            $mySweetParam: '%app.mySweetParam%'
            $logger: '@logger'

    App\Service\CacheExample:
        arguments:
            $cache: "@app.cache.widget"